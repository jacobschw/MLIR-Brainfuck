// RUN: Bf-opt %s --optbf-to-explicitbf > %t
// RUN: FileCheck %s < %t

// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

// The script is designed to make adding checks to
// a test case fast, it is *not* designed to be authoritative
// about what constitutes a good test! The CHECK should be
// minimized and named to reflect the test intent.


// CHECK-LABEL:   bf_pointer.ptr @bf_ptr = 0 : () -> ()
// CHECK:         memref.global "private" @bf_memory : memref<30000xi8>
// CHECK:         func.func private @getchar() -> i32
// CHECK:         func.func private @putchar(i32) -> i32
// CHECK:         %[[VAL_0:.*]] = func.call @getchar() : () -> i32
// CHECK:         %[[VAL_1:.*]] = llvm.trunc %[[VAL_0]] : i32 to i8
// CHECK:         %[[VAL_2:.*]] = memref.get_global @bf_memory : memref<30000xi8>
// CHECK:         %[[VAL_3:.*]] = bf_pointer.read_ptr {name = @bf_ptr} : () -> index
// CHECK:         memref.store %[[VAL_1]], %[[VAL_2]]{{\[}}%[[VAL_3]]] : memref<30000xi8>

bf_pointer.ptr @bf_ptr = 0 : () -> ()
memref.global "private" @bf_memory : memref<30000xi8>
func.func private @getchar() -> i32
func.func private @putchar(i32) -> i32

Bf.input